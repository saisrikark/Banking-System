\c payment

--1) TO GET THE DETAILS OF LOGIN AND NICK NAME OF USERS WITH A CRISIL RATING GREATER THAN A PARTICULAR VALUE
DROP VIEW LOGIN_USER;
CREATE VIEW LOGIN_USER AS SELECT * FROM ((LOGIN_INFO NATURAL JOIN USER_) NATURAL JOIN CREDIT_RATING);
SELECT * FROM LOGIN_USER WHERE CRISIL_SCORE>800;

--2) AVERAGE BALANCE OF MERCHANTS GROUPED BY CITY
DROP VIEW CITY_MERCH;
CREATE VIEW CITY_MERCH(CITY,AVG_BALANCE) AS
SELECT CITY,AVG(BALANCE) FROM MERCHANT GROUP BY CITY;
--SELECT * FROM CITY_MERCH;
SELECT CITY,MAX(AVG_BALANCE) FROM CITY_MERCH GROUP BY CITY;

--3) LIST ALL THE USERS WHO HAVE BORROWED MORE THAN A CERTAIN AMOUNT FROM OTHER USERS (EX: 1000 Rs)
DROP VIEW HIGH_BORROWERS;
CREATE VIEW HIGH_BORROWERS(ID,TOTAL_AMT_BORROWED) AS
SELECT BORROWER_ID,SUM(BALANCE), COUNT(*) FROM (USER_ JOIN LENDING_INFO ON USER_ID=BORROWER_ID) GROUP BY BORROWER_ID;
SELECT * FROM HIGH_BORROWERS WHERE TOTAL_AMT_BORROWED>1000;

--4) LIST THE NUMBER OF USERS AND MERCHANTS FROM EACH BANK
DROP VIEW BANK;
CREATE VIEW BANK AS
SELECT BANK_IFSC_CODE,CUST_TYPE,COUNT(*) FROM BANK_DETAIL GROUP BY BANK_IFSC_CODE,CUST_TYPE ORDER BY BANK_IFSC_CODE;
SELECT * FROM BANK;
--SELECT * FROM BANK_DETAIL;

--5) TO FIND HOW MUCH A CERTAIN USER OWES ALL OTHER USERS ON JUST A TRANSFER BASIS
--FINDING FOR EX: USER->
SELECT RECEIVEE_ID,SUM(AMOUNT) FROM P2P_TRANSX_INFO GROUP BY RECEIVEE_ID HAVING RECEIVEE_ID='12345';

--6) Get user details from user name
SELECT USER_NAME, USER_ID, BALANCE, PHONE_NO, EMAIL_ID, (STREET_ADDR || ', ' || CITY || ', ' || STATE) AS ADDRESS
FROM USER_
WHERE USER_NAME='Keshav';

--7) How many people are using our payment database?
SELECT COUNT(*) AS "Total registered accounts"
FROM LOGIN_INFO;

--8) How many merchants available in each state with balance of more than 1 lakh?
SELECT STATE, COUNT(*)
FROM MERCHANT
WHERE BALANCE>100000
GROUP BY STATE;

--9) How much average tax does a bussiness pay for transactions less than 1000 (without tax), ie for low amount transaction?
SELECT PAYEE_ID, AVG(taxes)
FROM B2B_TRANSX_INFO
GROUP BY PAYEE_ID
HAVING SUM(TAXES)<=500
ORDER BY PAYEE_ID;

--10) Users who don't have any balance amount left
SELECT USER_NAME
FROM USER_
WHERE BALANCE=0;
